#! This file is part of Fortuno.
#! Licensed under the BSD-2-Clause Plus Patent license.
#! SPDX-License-Identifier: BSD-2-Clause-Patent

#:mute
#:if not defined('_FORTUNO_FYPP_')
#:set _FORTUNO_FYPP_

#! Internal variable storing registered test items
#:set _fortuno_tests = {}


#! Starts a test procedure
#!
#! Args:
#!     name: Test name
#!     label: Label of the test
#!     args: Arguments of the test procedure as a list of strings
#!
#:def TEST(name, label="", args=None)
  #:set proc = "test" + ("_" + label if label else "") + "_" + name
  #:set argstr = ", ".join(args) if args is not None else ""
  $:_fortuno_tests.setdefault(label, []).append(&
      & {"name": name, "proc": proc})
  subroutine ${proc}$(${argstr}$)
#:enddef


#! Ends a test procedure
#:def END_TEST()
  end subroutine
#:enddef


#! Gives a list of tests associated with a given label.
#!
#! Args:
#!     label: Label of the tests items to generate (default: "")
#!
#:def TEST_ITEMS(label="", suffix="", constructor="test")
  #:set items = _fortuno_tests[label]
  #:set calls = [f"{constructor}('{item['name']}', {item['proc']})" for item in items]
  #:set lines = "        " + ",&\n        ".join(calls) + suffix + "&\n"
  $:lines
#:enddef


#! Calls the check routine and passes file and line nr. information
#!
#! Args:
#!     cond: Condition to check
#!     **kwargs: any keyword arguments, which should be passed to check()
#!
#:def CHECK(cond, **kwargs)
#:if kwargs
  #:set kwargstr = ", ".join([f"{name}={value}" for name, value in kwargs.items()])
  call check(${cond}$, file="${_FILE_}$", line=${_LINE_}$, ${kwargstr}$)
#:else
  call check(${cond}$, file="${_FILE_}$", line=${_LINE_}$)
#:endif
#:enddef


#! Calls the check() routine, passes file and line nr. information and calls return on failure.
#!
#! Args:
#!     cond: Condition to check
#!     **kwargs: any keyword arguments, which should be passed to check()
#!
#:def ASSERT(cond, **kwargs)
$:CHECK(cond, **kwargs)
if (failed()) return
#:enddef


#:endif
#:endmute
