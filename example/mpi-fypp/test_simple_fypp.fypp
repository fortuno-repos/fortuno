! This file is part of Fortuno.
! Licensed under the BSD-2-Clause Plus Patent license.
! SPDX-License-Identifier: BSD-2-Clause-Patent

#:include "fortuno_mpi.fypp"

module test_simple_fypp
  use mylib, only : broadcast
  use fortuno_mpi, only : as_char, global_comm, is_equal, suite => mpi_suite_item, test_list,&
      & this_rank
  $:FORTUNO_MPI_IMPORTS()
  implicit none

contains


  $:TEST("broadcast")
     integer, parameter :: sourcerank = 0, sourceval = 1, otherval = -1
     integer :: buffer

     character(:), allocatable :: msg

    ! GIVEN source rank contains a different integer value as all other ranks
    if (this_rank() == sourcerank) then
      buffer = sourceval
    else
      buffer = otherval
    end if

    ! WHEN source rank broadcasts its value
    call broadcast(global_comm(), buffer, sourcerank)

    ! Make every third rank fail for demonstration purposes
    if (mod(this_rank(), 3) == 2) then
      buffer = sourceval + 1
      msg = "Failing on rank " // as_char(this_rank()) // " on purpose"
    end if

    ! THEN each rank must contain source rank's value
    @:CHECK(is_equal(buffer, sourceval), msg=msg)

  $:END_TEST()


  ! Returns the test items from this module
  function tests()
    type(test_list) :: tests

    tests = test_list([&
        suite("simple_fypp", test_list([&
            $:TEST_ITEMS()
        ]))&
    ])
    $:STOP_ON_MISSING_TEST_ITEMS()

  end function tests

end module test_simple_fypp
